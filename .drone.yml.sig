eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgdGVzdF9idWlsZDoKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGFwayBhZGQgLS1uby1jYWNoZSBiYXNoIHNlZCBncmVwIGJjIGNvcmV1dGlscwogICAgICAtIC4vY2ktYnVpbGQuc2gKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbcHVzaCwgcHVsbF9yZXF1ZXN0LCB0YWddCiAgCiAgYnVpbGRfY2xhbWF2OgogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IGNsYW1hdiAuCiAgICB3aGVuOgogICAgICBicmFuY2g6IFttYXN0ZXIsIHJlZnMvdGFncy8qXQogICAgICBldmVudDogW3B1c2gsIHRhZ10KICAKICBidWlsZF9jbGFtYXYtcmVzdDoKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBidWlsZCAtdCBjbGFtYXYtcmVzdCBjbGFtYXYtcmVzdAogICAgd2hlbjoKICAgICAgYnJhbmNoOiBbbWFzdGVyLCByZWZzL3RhZ3MvKl0KICAgICAgZXZlbnQ6IFtwdXNoLCB0YWddCiAgCiAgY2xhbWF2X3RvX3F1YXk6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InVraG9tZW9mZmljZWRpZ2l0YWwrZHJvbmUiIC1wPSR7Q0xBTUFWX1JFUE9fVE9LRU59IHF1YXkuaW8KICAgICAgLSBkb2NrZXIgdGFnIGNsYW1hdiBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvY2xhbWF2OiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvY2xhbWF2OiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgIHdoZW46CiAgICAgIGJyYW5jaDogW21hc3RlciwgcmVmcy90YWdzLypdCiAgICAgIGV2ZW50OiBbcHVzaCwgdGFnXQogIAogIGNsYW1hdi1yZXN0X3RvX3F1YXk6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InVraG9tZW9mZmljZWRpZ2l0YWwrZHJvbmUiIC1wPSR7Q0xBTUFWX1JFUE9fVE9LRU59IHF1YXkuaW8KICAgICAgLSBkb2NrZXIgdGFnIGNsYW1hdi1yZXN0IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9jbGFtYXYtcmVzdDoke0RST05FX0NPTU1JVF9TSEF9CiAgICAgIC0gZG9ja2VyIHB1c2ggcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2NsYW1hdi1yZXN0OiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgIHdoZW46CiAgICAgIGJyYW5jaDogW21hc3RlciwgcmVmcy90YWdzLypdCiAgICAgIGV2ZW50OiBbcHVzaCwgdGFnXQogIAogIHRyaWdnZXJfZGVwbG95X3RvX3BsYXRmb3JtLXNlcnZpY2VzX2RldjoKICAgIGltYWdlOiBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwva2Q6djAuMi4yCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0ga2QgLS1pbnNlY3VyZS1za2lwLXRscy12ZXJpZnkgLS1uYW1lc3BhY2U9dmlydXMtc2NhbiAtLWt1YmUtc2VydmVyPWh0dHBzOi8va3ViZS1kZXYuZHNwLm5vdHByb2QuaG9tZW9mZmljZS5nb3YudWsgLS1yZXRyaWVzIDUwIC0ta3ViZS10b2tlbj0ke0tVQkVfVE9LRU5fREVWfSAtLWZpbGUgazhzL2NsYW1kLWFwaS55YW1sCiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgogICAgICBldmVudDogcHVzaAoKICBidWlsZF9jbGFtYXY6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgYnVpbGQgLXQgY2xhbWF2IC4KICAgIHdoZW46CiAgICAgIGV2ZW50OiB0YWcKICAKICBidWlsZF9jbGFtYXYtcmVzdDoKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBidWlsZCAtdCBjbGFtYXYtcmVzdCBjbGFtYXYtcmVzdAogICAgd2hlbjoKICAgICAgZXZlbnQ6IHRhZyAgCiAgY2xhbWF2X3RvX3F1YXk6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InVraG9tZW9mZmljZWRpZ2l0YWwrZHJvbmUiIC1wPSR7Q0xBTUFWX1JFUE9fVE9LRU59IHF1YXkuaW8KICAgICAgLSBkb2NrZXIgdGFnIGNsYW1hdiBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvY2xhbWF2OiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvY2xhbWF2OiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgIHdoZW46CiAgICAgIGV2ZW50OiB0YWcKICAKICBjbGFtYXYtcmVzdF90b19xdWF5OgogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGxvZ2luIC11PSJ1a2hvbWVvZmZpY2VkaWdpdGFsK2Ryb25lIiAtcD0ke0NMQU1BVl9SRVBPX1RPS0VOfSBxdWF5LmlvCiAgICAgIC0gZG9ja2VyIHRhZyBjbGFtYXYtcmVzdCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvY2xhbWF2LXJlc3Q6JHtEUk9ORV9DT01NSVRfU0hBfQogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9jbGFtYXYtcmVzdDoke0RST05FX0NPTU1JVF9TSEF9CiAgICB3aGVuOgogICAgICBldmVudDogdGFnCiAgCiAgdHJpZ2dlcl9kZXBsb3lfdG9fcGxhdGZvcm0tc2VydmljZXNfZGV2OgogICAgaW1hZ2U6IHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9rZDp2MC4yLjIKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBrZCAtLWluc2VjdXJlLXNraXAtdGxzLXZlcmlmeSAtLW5hbWVzcGFjZT12aXJ1cy1zY2FuIC0ta3ViZS1zZXJ2ZXI9aHR0cHM6Ly9rdWJlLWRldi5kc3Aubm90cHJvZC5ob21lb2ZmaWNlLmdvdi51ayAtLXJldHJpZXMgNTAgLS1rdWJlLXRva2VuPSR7S1VCRV9UT0tFTl9ERVZ9IC0tZmlsZSBrOHMvY2xhbWQtYXBpLnlhbWwKICAgIHdoZW46CiAgICAgIGJyYW5jaDogbWFzdGVyCiAgICAgIGV2ZW50OiBwdXNoCgogIHRyaWdnZXJfZGVwbG95X3RvX3BsYXRmb3JtLXNlcnZpY2VzX3Byb2Q6CiAgICBpbWFnZTogcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2tkOnYwLjIuMgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGtkIC0taW5zZWN1cmUtc2tpcC10bHMtdmVyaWZ5IC0tbmFtZXNwYWNlPXZpcnVzLXNjYW4gLS1rdWJlLXNlcnZlcj1odHRwczovL2t1YmUuZHNwLmRpZ2l0YWwuaG9tZW9mZmljZS5nb3YudWsgLS1yZXRyaWVzIDUwIC0ta3ViZS10b2tlbj0ke0tVQkVfVE9LRU5fUFJPRH0gLS1maWxlIGs4cy9jbGFtZC1hcGkueWFtbAogICAgd2hlbjoKICAgICAgZXZlbnQ6IHRhZwogICAgICAKc2VydmljZXM6CiAgZGluZDoKICAgIGltYWdlOiBkb2NrZXI6MS4xMS1kaW5kCiAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICBjb21tYW5kOgogICAgICAtICItcyIKICAgICAgLSAib3ZlcmxheSIK.ICwVfHcPkeg_hpY-Ul-6AWClvexAjeaVifJPQhQD9hQ